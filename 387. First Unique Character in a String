Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

 

Example 1:

Input: s = "leetcode"
Output: 0
Example 2:

Input: s = "loveleetcode"
Output: 2
Example 3:

Input: s = "aabb"
Output: -1
 

Constraints:

1 <= s.length <= 105
s consists of only lowercase English letters.
Accepted
842,351
Submissions
1,523,275


===============================================================================================================================================================================

        // for(int i = 0; i<s.length(); i++){
        //     int counter = 0;
        //     for(int j = 0 ; j<s.length(); j++){
        //         if(s.charAt(i) == s.charAt(j) && i != j){
        //             counter++;
        //         }
        //     }
        //     if(counter==0){
        //         return i;
        //     }
        // }
        
        
        
Ofcourse LC doesnot want anyone to follow bruteforce approach. 


===============================================================================================================================================================================

Used HashMap to store the occurances of the characters and then return the first with 1 value or return -1

class Solution {
    public int firstUniqChar(String s) {
        // for(int i = 0; i<s.length(); i++){
        //     int counter = 0;
        //     for(int j = 0 ; j<s.length(); j++){
        //         if(s.charAt(i) == s.charAt(j) && i != j){
        //             counter++;
        //         }
        //     }
        //     if(counter==0){
        //         return i;
        //     }
        // }
        
        HashMap<Character, Integer> hm = new HashMap<>();
        int len = s.length();
        
        for(int i = 0; i<len; i++){
            char c = s.charAt(i);
            if(hm.containsKey(c)){
                hm.put(c, hm.get(c) + 1);
            }else{
                hm.put(c, 1);
            }
        }
        
        for(int i = 0; i<len; i++){
            if(hm.get(s.charAt(i)) == 1){
                return i;
            }
        }
        
        
        return -1;
    }
}
