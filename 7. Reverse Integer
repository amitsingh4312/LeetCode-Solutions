Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
Example 4:

Input: x = 0
Output: 0
 

Constraints:

-231 <= x <= 231 - 1



-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


Pretty Simple Question. Doing it just to continue with my practice.

class Solution {
    public int reverse(int x) {
        int rem = 0;
        long newnum = 0l;
        while(x!=0){
            rem = x%10;
            x = x/10;
            newnum = newnum*10 + rem;
            
            if(newnum<Integer.MIN_VALUE || newnum>Integer.MAX_VALUE){
                return 0;
            }
                System.out.println(newnum);
        }
        System.out.println(Integer.MAX_VALUE);
        return (int)newnum;
    }
}

//2147483648


