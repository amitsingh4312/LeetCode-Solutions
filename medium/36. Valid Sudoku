Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:

Each row must contain the digits 1-9 without repetition.
Each column must contain the digits 1-9 without repetition.
Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.
Note:

A Sudoku board (partially filled) could be valid but is not necessarily solvable.
Only the filled cells need to be validated according to the mentioned rules.
 

Example 1:


Input: board = 
[["5","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]
Output: true
Example 2:

Input: board = 
[["8","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]
Output: false
Explanation: Same as Example 1, except with the 5 in the top left corner being modified to 8. Since there are two 8's in the top left 3x3 sub-box, it is invalid.
 

Constraints:

board.length == 9
board[i].length == 9
board[i][j] is a digit 1-9 or '.'.
Accepted
572,415
Submissions
1,079,554



------------------------------------------------------------------------------------------------------------------------------------------------------------------------

REVIEW: Great Question, Had to take hint from youtube and then tried solving it. Solved it on first try after that

APPROACH: 
1. Use HashSet and try to insert values other than '.' in the hashset making a string of row/column/box + index + value
2. I had no idea how to find the box number so googled the formula for that as well
3. (i/3)*3 + j/3 is to find the box number (3x3 in a sudoku of 9x9)
4. Because HashSet does not allow duplicates to be added, return false if adding is not successful



class Solution {
    public boolean isValidSudoku(char[][] board) {
        HashSet visited = new HashSet();
        for(int i = 0; i<9; i++){
            for(int j = 0; j<9; j++){
                if(board[i][j] != '.'){
                    if(
                        !visited.add("r"+i+board[i][j]) ||
                        !visited.add("c"+j+board[i][j]) ||
                        !visited.add("box"+(i/3)*3+j/3+board[i][j])
                    ){
                        return false;
                    }
                }
            }
        }
        
        return true;
    }
}
